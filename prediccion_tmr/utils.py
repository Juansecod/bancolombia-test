def train_model(df, periods=30):
    """
    The function `train_model` uses the Prophet library to train a time series forecasting model on the
    input DataFrame `df` with a specified number of `periods` for future predictions.
    
    :param df: The `df` parameter in the `train_model` function is a pandas DataFrame that contains the
    data you want to use for training the Prophet model. It should have at least two columns:
    'VIGENCIADESDE' (datetime column representing the dates) and 'VALOR' (numeric
    :param periods: The `periods` parameter in the `train_model` function specifies the number of future
    time periods for which you want to generate forecasts using the Prophet model. In the provided code
    snippet, this parameter is set to a default value of 30 if not explicitly specified when calling the
    function. You can, defaults to 30 (optional)
    :return: The function `train_model` is returning the forecast generated by the Prophet model for the
    specified number of periods into the future.
    """
    from prophet import Prophet
    import pandas as pd
    
    df["VIGENCIADESDE"] = pd.to_datetime(df['VIGENCIADESDE'], dayfirst=True)
    
    df.rename(columns={'VIGENCIADESDE': 'ds', 'VALOR': 'y'}, inplace=True)

    model = Prophet()
    model.fit(df)

    

    future = model.make_future_dataframe(periods=periods) 
    forecast = model.predict(future)
    print(forecast.info())
    return forecast

def generate_plots(forecast, freq=30):
    """
    The function `generate_plots` creates a line plot of forecasted values for a given time period and
    returns the plot as a base64 encoded image in HTML format.
    
    :param forecast: The `generate_plots` function you provided generates a line plot based on a
    forecast DataFrame. The function takes two parameters:
    :param freq: The `freq` parameter in the `generate_plots` function represents the number of days for
    which you want to generate the forecast plots. It is a optional parameter with a default value of 30
    days. You can adjust this parameter to specify a different number of days for the forecast period,
    defaults to 30 (optional)
    :return: The function `generate_plots` returns an HTML code snippet that includes an image of the
    forecast plot generated using Seaborn and Matplotlib. The image is encoded in base64 format and
    embedded in the HTML code as a data URI.
    """
    import base64
    from io import BytesIO
    import seaborn as sns
    import matplotlib.pyplot as plt
    from datetime import timedelta

    buffer = BytesIO()
    
    data_last_period = forecast[forecast['ds'] >= (forecast['ds'].max() - timedelta(days=freq))]
    
    plt.figure(figsize=(15,6))
    ax = sns.lineplot(data_last_period, x="ds", y="yhat")
    ax.set(xlabel='Dia', ylabel='Valor Dolar', title=f"Predicci√≥n TRM del dolar para los proximos {freq} dias")
    sns_figure = ax.get_figure()
    
    sns_figure.savefig(buffer, format='png')
    
    buffer.seek(0)

    image_base64 = base64.b64encode(buffer.getvalue()).decode()

    html_code = f'<img src="data:image/png;base64,{image_base64}" alt="Forecast Components">'
    return html_code